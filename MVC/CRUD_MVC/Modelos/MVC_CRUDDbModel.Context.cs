//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Modelos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CRUD_MVCEntities : DbContext
    {
        public CRUD_MVCEntities()
            : base("name=CRUD_MVCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual dbSet<Estatus> Estatus { get; set; }
        public virtual dbSet<Persona> Persona { get; set; }
        public virtual dbSet<Persona_Tipo> Persona_Tipo { get; set; }
        public virtual dbSet<vConsultaPersona> vConsultaPersona { get; set; }
    
        [DbFunction("CRUD_MVCEntities", "fncConsultaPersonalPorId")]
        public virtual IQueryable<fncConsultaPersonalPorId_Result> fncConsultaPersonalPorId(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fncConsultaPersonalPorId_Result>("[CRUD_MVCEntities].[fncConsultaPersonalPorId](@Id)", idParameter);
        }
    
        [DbFunction("CRUD_MVCEntities", "fncConsultaPersonaPorNombres")]
        public virtual IQueryable<fncConsultaPersonaPorNombres_Result> fncConsultaPersonaPorNombres(string nombres)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fncConsultaPersonaPorNombres_Result>("[CRUD_MVCEntities].[fncConsultaPersonaPorNombres](@Nombres)", nombresParameter);
        }
    
        [DbFunction("CRUD_MVCEntities", "fncConsultaPersonaPorNombresYApellido")]
        public virtual IQueryable<fncConsultaPersonaPorNombresYApellido_Result> fncConsultaPersonaPorNombresYApellido(string nombres, string apellido)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fncConsultaPersonaPorNombresYApellido_Result>("[CRUD_MVCEntities].[fncConsultaPersonaPorNombresYApellido](@Nombres, @Apellido)", nombresParameter, apellidoParameter);
        }
    }
}
